:root {
    --dropShadowUnit: 0.2rem;
    --dropShadow: 0px 0px var(--dropShadowUnit) rgb(5, 5, 5);
    --dropShadowBig: 0px 0px calc(var(--dropShadowUnit) * 2) rgb(5, 5, 5);
    --dropShadowLight: 0px 0px var(--dropShadowUnit) rgba(255, 255, 255, 0.501);

    --dropShadowText: 0px 0px calc(var(--dropShadowUnit) / 2) rgb(5, 5, 5);
    --dropShadowLightText: 0px 0px calc(var(--dropShadowUnit) / 2) rgba(255, 255, 255, 0.501);
}

.app {
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--gradientBG);
}

.app .textInput {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.app .textInput input {
    margin-bottom: 1rem;
    height: 5rem;
    width: 20rem;
    border-radius: 1rem;
    font-size: 3rem;
    font-family: monospace;
    color: var(--colorWhite);
    border: 2px solid var(--colorMain);
    background: var(--colorMainDark);
    position: relative;
    text-align: center;
    box-shadow: var(--dropShadow);
    position: relative;
}

.app .textInput input:focus {
    outline: none;
}

.app .textInput button {
    margin: 0px;
    height: 3rem;
    font-size: 1.5rem;
    font-weight: 500;
    font-family: sans-serif;
    letter-spacing: 0.25ch;
    width: 10rem;
    border-radius: 1rem;
    background: var(--colorMain);
    color: var(--colorWhite);
    border: none;
    user-select: none;
    transition: color 0.125s ease-out;
    box-shadow: var(--dropShadow);
    text-shadow: var(--dropShadowText);
}

.app .textInput button:active {
    color: var(--colorSecondary);
    box-shadow: var(--dropShadowLight);
    text-shadow: var(--dropShadowLightText);
}

.app .result {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    max-width: 100vw;
    max-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
}

.app .result h1 {
    max-width: 95%;
    font-size: 4rem;
    font-family: monospace;
    text-align: center;
    animation: jiggle 0.25s ease-in-out;
    animation-delay: 0.5s;
}

@keyframes jiggle {
    from {
        transform: rotate(0deg);
    }

    25% {
        transform: rotate(1deg);
    }

    50% {
        transform: rotate(-2deg);
    }

    75% {
        transform: rotate(2deg);
    }

    to {
        transform: rotate(0deg);
    }
}

.app .curtain {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #00000025;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: opacity 0.25s ease-out;
}

@keyframes opacity {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.app .curtain .settings {
    width: min(80%, 40rem);
    height: min(80%, 60rem);
    background-color: var(--colorBG);
    border-radius: 1rem;
    margin: 0px;
    overflow: none;
    animation: dropDown 0.35s ease-out;
}

@keyframes dropDown {
    from {
        transform: translateY(-100vh);
        user-select: none;
    }
    to {
        transform: translateY(0);
        user-select: initial;
    }
}

.settings .header {
    width: 100%;
    padding-top: 0px;
    height: 5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--colorMain);
    border-radius: 1rem 1rem 0 0;
    box-shadow: var(--dropShadowBig);
}

.settings {
    position: relative;
}

.settings .header svg {
    width: 3.5rem;
    height: 3.5rem;
    padding: 1rem;
    stroke: var(--colorWhite);
}

.settings .header h1 {
    margin: 0px;
    font-size: 2rem;
    text-align: center;
    white-space: nowrap;
    overflow: none;
    text-overflow: ellipsis;
}

.settings .header button {
    background-color: var(--colorDanger);
    outline: 0px;
    border: 0px;
    margin: 1rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0px;
    box-shadow: var(--dropShadowText);
}

.settings .header button svg {
    height: 1rem;
    width: 1rem;
    padding: 0px;
    margin: 1rem;
    transform: scale(1.4);
}

.settings .settingsContainer {
    height: calc(100% - 13rem);
    padding: 1rem 1rem 1rem 1rem;
    animation-delay: 0.125s;
}

.settings .settingsContainer .words {
    overflow-y: auto;
    scroll-behavior: smooth;
    height: calc(100% - 3rem);
    padding-bottom: 5rem;
}

.settings .settingsContainer .words::-webkit-scrollbar {
    display: none;
}

.settingsContainer .screenTimeInput {
    width: calc(100%);
    height: 3rem;
    margin-bottom: 1.25rem;
    margin-top: 0.25rem;
    display: flex;
    align-items: center;
}

.settingsContainer .screenTimeInput.animated {
    animation: timeDrop 0.25s ease-out;
    animation-delay: 0.35s;
    animation-fill-mode: backwards;
}

@keyframes timeDrop {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.settingsContainer .screenTimeInput input {
    height: calc(100% - 4px);
    width: calc(100% - 4.5rem - 4px);
    padding: 0px;
    margin: 0px;
    outline: 0px;
    font-size: 1.5rem;
    text-align: right;
    background-color: var(--colorBG);
    border: 0.5rem solid var(--colorMain);
    border-top: 2px solid var(--colorMain);
    border-right: 2px solid var(--colorMain);
    border-left: 0px;
    padding: 0px 2.25ch 0px 1ch;
    border-radius: 0px 0.5rem 0.5rem 0px;
    position: relative;
}

.settingsContainer .screenTimeInput input[type='number']::-webkit-inner-spin-button,
.settingsContainer .screenTimeInput input[type='number']::-webkit-outer-spin-button {
    display: none;
}

.settingsContainer .screenTimeInput span {
    position: absolute;
    right: 2.5ch;
    color: var(--colorGray);
}

.settingsContainer .screenTimeInput svg {
    height: 2.5rem;
    width: 2.5rem;
    background-color: var(--colorMain);
    border-radius: 100%;
    padding: 0px;
    transform: scale(1.7);
    stroke: var(--colorMainDark);
    fill: var(--colorWhite);
    margin-left: 0.5rem;
    z-index: 1;
}

.settingsContainer .wordEditor {
    width: 100%;
    margin-bottom: 1rem;
    box-shadow: var(--dropShadow);
}

.settingsContainer .wordEditor.animated {
    animation: slideInLeft 0.25s ease-out;
    animation-delay: calc(0.4s + (0.1s * var(--data-delay-multiply)));
    animation-fill-mode: backwards;
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
        user-select: none;
    }
    to {
        transform: translateX(0);
        opacity: 1;
        user-select: initial;
    }
}

.settingsContainer .wordEditor .wordHeader {
    width: 100%;
    height: 3rem;
    display: flex;
    border-radius: 0.5rem 0.5rem 0 0;
    justify-content: space-between;
    background-color: var(--colorMain);
}

.wordHeader input {
    background-color: var(--colorBG);
    width: 15ch;
    border: 0px;
    margin: 0.5rem;
    border-radius: 5px;
    padding-left: 1ch;
}

.wordHeader span {
    width: 15ch;
    font-size: 1rem;
    border: 0px;
    margin: auto 0.25rem;
    border-radius: 5px;
    padding-left: 1ch;
    font-weight: 700;
    text-transform: capitalize;
}

.wordHeader .buttons {
    display: flex;
}

.wordHeader button {
    height: calc(100% - 1rem);
    padding: 0px;
    width: 2rem;
    border: 0px;
    margin: 0.5rem 0.5rem 0.5rem 0;
    border-radius: 5px;
}

.wordHeader button.cap {
    background-color: var(--colorBG);
    fill: var(--colorWhite);
}

.wordHeader button.delete {
    background-color: var(--colorDanger);
    box-shadow: var(--dropShadow);
}

.wordHeader button svg {
    width: 1.65rem;
    height: 1.65rem;
}

.wordHeader button.delete svg {
    stroke: var(--colorWhite);
}

.settingsContainer .wordEditor .wordInfo {
    width: calc(100% - 4px - 1rem);
    height: 2rem;
    background-color: none;
    border: 2px solid var(--colorMain);
    border-radius: 0 0 0.5rem 0.5rem;
    display: flex;
    padding: 0.5rem;
}

.wordInfo input,
.wordInfo button {
    height: 2rem;
    border: 0px;
    margin: 0px;
    padding: 0px;
    border-radius: 5px;
    background-color: var(--colorBGLight);
    margin-right: 5px;
}

.wordInfo input {
    padding-left: 1ch;
}

.wordInfo button {
    width: 2rem;
}

.wordInfo button svg {
    fill: var(--colorWhite);
}

.wordInfo input[type='color'] {
    width: 2rem;
    position: relative;
    padding-left: initial;
    padding: 2px;
}

.wordInfo input[type='color']::after {
    content: 'T';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.wordInfo input[type='number'] {
    width: 5rem;
    position: relative;
}

.settingsContainer .words > button {
    position: absolute;
    bottom: 0;
    right: 0;
    margin: 1.5rem;
    padding: 0px;
    width: 4rem;
    height: 4rem;
    background-color: var(--colorMain);
    border: 0px;
    border-radius: 100%;
    box-shadow: var(--dropShadowText);
}

.settingsContainer .words > button.animated {
    animation: buttonAttention 0.25s ease-in-out;
    animation-delay: 0.75s;
    animation-fill-mode: backwards;
}

@keyframes buttonAttention {
    from {
        opacity: 0;
        transform: scale(0);
    }

    85% {
        transform: scale(1.03);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

.settingsContainer .words > button svg {
    transform: scale(0.8);
}

@media screen and (max-width: 40rem) {
    .settings {
        border-radius: 0px !important;
        width: 100% !important;
        height: 100% !important;
    }

    .settings .header {
        border-radius: 0px;
        padding-top: 2.5rem;
    }

    .settings .settingsContainer {
        border-radius: 0px;
        height: calc(100% - 15.5rem);
    }

    .settings .header.animated {
        animation: headerDrop 0.25s ease-out;
        animation-delay: 0.25s;
        animation-fill-mode: backwards;
    }

    @keyframes headerDrop {
        from {
            transform: translateY(-5rem);
            user-select: none;
            opacity: 0;
        }
        to {
            transform: translateY(0);
            user-select: initial;
            opacity: 1;
        }
    }
}
